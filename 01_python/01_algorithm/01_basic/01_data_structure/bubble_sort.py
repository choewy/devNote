# 버블정렬 : 행렬의 뒤의 원소와 비교하면서 순서에 맞게 스왑하는 정렬
# 시간복잡도 : O(n²)

data = [5, 4, 10, 6, 3, 1, 8, 9, 2, 7]


def bubble_sort(array):
    print("data :", array)
    loop_cnt = 0
    array_len = len(array)

    for x in range(array_len-1):
        for y in range(array_len-1):
            if array[y] > array[y+1]:
                array[y], array[y+1] = array[y+1], array[y]
                continue
            loop_cnt += 1

    print("loop_cnt :", loop_cnt)
    print("result :", array)

    return array


"""
< Loop #1 >

 *  *                        
[5, 4, 10, 6, 3, 1, 8, 9, 2, 7]

    *  *                     
[4, 5, 10, 6, 3, 1, 8, 9, 2, 7]

       *  *                  
[4, 5, 10, 6, 3, 1, 8, 9, 2, 7]

          *  *               
[4, 5, 6, 10, 3, 1, 8, 9, 2, 7]

             *  *            
[4, 5, 6, 3, 10, 1, 8, 9, 2, 7]

                *  *         
[4, 5, 6, 3, 1, 10, 8, 9, 2, 7]

                   *  *      
[4, 5, 6, 3, 1, 8, 10, 9, 2, 7]

                      *  *   
[4, 5, 6, 3, 1, 8, 9, 10, 2, 7]

                         *  *
[4, 5, 6, 3, 1, 8, 9, 2, 10, 7]

< Loop #2 >

 *  *                        
[4, 5, 6, 3, 1, 8, 9, 2, 7, 10]

    *  *                     
[4, 5, 6, 3, 1, 8, 9, 2, 7, 10]

       *  *                  
[4, 5, 6, 3, 1, 8, 9, 2, 7, 10]

          *  *               
[4, 5, 3, 6, 1, 8, 9, 2, 7, 10]

             *  *            
[4, 5, 3, 1, 6, 8, 9, 2, 7, 10]

                *  *         
[4, 5, 3, 1, 6, 8, 9, 2, 7, 10]

                   *  *      
[4, 5, 3, 1, 6, 8, 9, 2, 7, 10]

                      *  *   
[4, 5, 3, 1, 6, 8, 2, 9, 7, 10]

                         *  *
[4, 5, 3, 1, 6, 8, 2, 7, 9, 10]

< Loop #3 >

 *  *                        
[4, 5, 3, 1, 6, 8, 2, 7, 9, 10]

    *  *                     
[4, 5, 3, 1, 6, 8, 2, 7, 9, 10]

       *  *                  
[4, 3, 5, 1, 6, 8, 2, 7, 9, 10]

          *  *               
[4, 3, 1, 5, 6, 8, 2, 7, 9, 10]

             *  *            
[4, 3, 1, 5, 6, 8, 2, 7, 9, 10]

                *  *         
[4, 3, 1, 5, 6, 8, 2, 7, 9, 10]

                   *  *      
[4, 3, 1, 5, 6, 2, 8, 7, 9, 10]

                      *  *   
[4, 3, 1, 5, 6, 2, 7, 8, 9, 10]

                         *  *
[4, 3, 1, 5, 6, 2, 7, 8, 9, 10]

< Loop #4 >

 *  *                        
[4, 3, 1, 5, 6, 2, 7, 8, 9, 10]

    *  *                     
[3, 4, 1, 5, 6, 2, 7, 8, 9, 10]

       *  *                  
[3, 1, 4, 5, 6, 2, 7, 8, 9, 10]

          *  *               
[3, 1, 4, 5, 6, 2, 7, 8, 9, 10]

             *  *            
[3, 1, 4, 5, 6, 2, 7, 8, 9, 10]

                *  *         
[3, 1, 4, 5, 2, 6, 7, 8, 9, 10]

                   *  *      
[3, 1, 4, 5, 2, 6, 7, 8, 9, 10]

                      *  *   
[3, 1, 4, 5, 2, 6, 7, 8, 9, 10]

                         *  *
[3, 1, 4, 5, 2, 6, 7, 8, 9, 10]

< Loop #5 >

 *  *                        
[3, 1, 4, 5, 2, 6, 7, 8, 9, 10]

    *  *                     
[1, 3, 4, 5, 2, 6, 7, 8, 9, 10]

       *  *                  
[1, 3, 4, 5, 2, 6, 7, 8, 9, 10]

          *  *               
[1, 3, 4, 5, 2, 6, 7, 8, 9, 10]

             *  *            
[1, 3, 4, 2, 5, 6, 7, 8, 9, 10]

                *  *         
[1, 3, 4, 2, 5, 6, 7, 8, 9, 10]

                   *  *      
[1, 3, 4, 2, 5, 6, 7, 8, 9, 10]

                      *  *   
[1, 3, 4, 2, 5, 6, 7, 8, 9, 10]

                         *  *
[1, 3, 4, 2, 5, 6, 7, 8, 9, 10]

< Loop #6 >

 *  *                        
[1, 3, 4, 2, 5, 6, 7, 8, 9, 10]

    *  *                     
[1, 3, 4, 2, 5, 6, 7, 8, 9, 10]

       *  *                  
[1, 3, 4, 2, 5, 6, 7, 8, 9, 10]

          *  *               
[1, 3, 2, 4, 5, 6, 7, 8, 9, 10]

             *  *            
[1, 3, 2, 4, 5, 6, 7, 8, 9, 10]

                *  *         
[1, 3, 2, 4, 5, 6, 7, 8, 9, 10]

                   *  *      
[1, 3, 2, 4, 5, 6, 7, 8, 9, 10]

                      *  *   
[1, 3, 2, 4, 5, 6, 7, 8, 9, 10]

                         *  *
[1, 3, 2, 4, 5, 6, 7, 8, 9, 10]

< Loop #7 >

 *  *                        
[1, 3, 2, 4, 5, 6, 7, 8, 9, 10]

    *  *                     
[1, 3, 2, 4, 5, 6, 7, 8, 9, 10]

       *  *                  
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

          *  *               
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

             *  *            
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                *  *         
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                   *  *      
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                      *  *   
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                         *  *
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

< Loop #8 >

 *  *                        
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    *  *                     
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

       *  *                  
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

          *  *               
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

             *  *            
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                *  *         
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                   *  *      
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                      *  *   
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                         *  *
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

< Loop #9 >

 *  *                        
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    *  *                     
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

       *  *                  
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

          *  *               
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

             *  *            
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                *  *         
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                   *  *      
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                      *  *   
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

                         *  *
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
"""
