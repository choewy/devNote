# 삽입정렬 : 이전까지의 원소와 비교하면서 순서에 맞게 스왑하는 정렬
# 시간복잡도 : O(n²), continue 사용할 경우 O(n(n-1)/2) ≒ O(n)

data = [5, 4, 10, 6, 3, 1, 8, 9, 2, 7]


def inserting_sort(array):
    print("data :", array)
    loop_cnt = 0
    array_len = len(array)

    for x in range(1, array_len):
        for y in range(0, x):
            if array[x] < array[y]:
                array[x], array[y] = array[y], array[x]
                continue
            loop_cnt += 1

    print("loop_cnt :", loop_cnt)
    print("result :", array)

    return array


"""
< Loop #1 >

 *  *
[5, 4, 10, 6, 3, 1, 8, 9, 2, 7]

< Loop #2 >

 *     *  
[4, 5, 10, 6, 3, 1, 8, 9, 2, 7]

    *  *
[4, 5, 10, 6, 3, 1, 8, 9, 2, 7]

< Loop #3 >

 *         *   
[4, 5, 10, 6, 3, 1, 8, 9, 2, 7]

    *      *      
[4, 5, 10, 6, 3, 1, 8, 9, 2, 7]

        *  *
[4, 5, 10, 6, 3, 1, 8, 9, 2, 7]

< Loop #4 >

 *            *
[4, 5, 6, 10, 3, 1, 8, 9, 2, 7]

    *         *          
[3, 5, 6, 10, 4, 1, 8, 9, 2, 7]

       *      *
[3, 4, 6, 10, 5, 1, 8, 9, 2, 7]

           *  *
[3, 4, 5, 10, 6, 1, 8, 9, 2, 7]

< Loop #5 >

 *               *
[3, 4, 5, 6, 10, 1, 8, 9, 2, 7]

    *            *
[1, 4, 5, 6, 10, 3, 8, 9, 2, 7]

       *         *
[1, 3, 5, 6, 10, 4, 8, 9, 2, 7]

          *      *
[1, 3, 4, 6, 10, 5, 8, 9, 2, 7]

              *  *
[1, 3, 4, 5, 10, 6, 8, 9, 2, 7]

< Loop #6 >

 *                  *                   
[1, 3, 4, 5, 6, 10, 8, 9, 2, 7]

    *               *            
[1, 3, 4, 5, 6, 10, 8, 9, 2, 7]

       *            *            
[1, 3, 4, 5, 6, 10, 8, 9, 2, 7]

          *         *            
[1, 3, 4, 5, 6, 10, 8, 9, 2, 7]

             *      *            
[1, 3, 4, 5, 6, 10, 8, 9, 2, 7]

                 *  *            
[1, 3, 4, 5, 6, 10, 8, 9, 2, 7]

< Loop #7 >

 *                     *
[1, 3, 4, 5, 6, 8, 10, 9, 2, 7]

    *                  *
[1, 3, 4, 5, 6, 8, 10, 9, 2, 7]

       *               *
[1, 3, 4, 5, 6, 8, 10, 9, 2, 7]

          *            *
[1, 3, 4, 5, 6, 8, 10, 9, 2, 7]

             *         *
[1, 3, 4, 5, 6, 8, 10, 9, 2, 7]

                *      *
[1, 3, 4, 5, 6, 8, 10, 9, 2, 7]

                    *  *
[1, 3, 4, 5, 6, 8, 10, 9, 2, 7]

< Loop #8 >

 *                        *
[1, 3, 4, 5, 6, 8, 9, 10, 2, 7]

    *                     *
[1, 3, 4, 5, 6, 8, 9, 10, 2, 7]

       *                  *
[1, 2, 4, 5, 6, 8, 9, 10, 3, 7]

          *               *
[1, 2, 3, 5, 6, 8, 9, 10, 4, 7]

             *            *
[1, 2, 3, 4, 6, 8, 9, 10, 5, 7]

                *         *
[1, 2, 3, 4, 5, 8, 9, 10, 6, 7]

                   *      *
[1, 2, 3, 4, 5, 6, 9, 10, 8, 7]

                       *  *
[1, 2, 3, 4, 5, 6, 8, 10, 9, 7]

< Loop #9 >

 *                           *
[1, 2, 3, 4, 5, 6, 8, 9, 10, 7]

    *                        *
[1, 2, 3, 4, 5, 6, 8, 9, 10, 7]

       *                     *
[1, 2, 3, 4, 5, 6, 8, 9, 10, 7]

          *                  *
[1, 2, 3, 4, 5, 6, 8, 9, 10, 7]

             *               *
[1, 2, 3, 4, 5, 6, 8, 9, 10, 7]

                *            *
[1, 2, 3, 4, 5, 6, 8, 9, 10, 7]

                   *         *
[1, 2, 3, 4, 5, 6, 8, 9, 10, 7]

                      *      *
[1, 2, 3, 4, 5, 6, 7, 9, 10, 8]

                          *  *
[1, 2, 3, 4, 5, 6, 7, 8, 10, 9]
"""
